{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?4241","webpack:///./src/components/LetterButton.vue?be37","webpack:///./src/App.vue?ce00","webpack:///./src/components/HangmanGame.vue?9970","webpack:///./src/components/LetterButton.vue?8083","webpack:///src/components/LetterButton.vue","webpack:///./src/components/LetterButton.vue?b041","webpack:///./src/components/LetterButton.vue","webpack:///src/components/HangmanGame.vue","webpack:///./src/components/HangmanGame.vue?ef93","webpack:///./src/components/HangmanGame.vue","webpack:///./src/components/CrosswordGame.vue?30b0","webpack:///src/components/CrosswordGame.vue","webpack:///./src/components/CrosswordGame.vue?56cd","webpack:///./src/components/CrosswordGame.vue?1e54","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue?bff9","webpack:///./src/main.js","webpack:///./src/components/HangmanGame.vue?4dab","webpack:///./src/components/CrosswordGame.vue?e949"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LetterButton_vue_vue_type_style_index_0_id_5520117e_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LetterButton_vue_vue_type_style_index_0_id_5520117e_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_9421f4ba_render","_vm","this","_h","$createElement","_c","_self","attrs","id","_v","staticClass","no-body","card","title","active","staticRenderFns","HangmanGamevue_type_template_id_b9783970_scoped_true_render","align-h","size","on","click","playAgain","_e","_m","_l","letter","_s","row","game-over","gameOver","two-players","twoPlayers","check","$event","HangmanGamevue_type_template_id_b9783970_scoped_true_staticRenderFns","LetterButtonvue_type_template_id_5520117e_scoped_true_render","disabled","clicked","LetterButtonvue_type_template_id_5520117e_scoped_true_staticRenderFns","LetterButtonvue_type_script_lang_js_","props","methods","$emit","watch","newValue","components_LetterButtonvue_type_script_lang_js_","component","componentNormalizer","LetterButton","HangmanGamevue_type_script_lang_js_","components","words","type","Array","default","showPlayAgain","Boolean","lang","String","validator","indexOf","computed","wordsUpperCased","map","word","toUpperCase","winMessage","loseMessage","filters","capitalize","letters","currentWord","wordDivs","guesses","lose","canvas","ctx","randomInteger","min","max","Math","floor","random","drawGallows","clearRect","width","height","fillStyle","strokeStyle","beginPath","moveTo","lineTo","stroke","closePath","makeBlanks","updateCanvas","arc","PI","font","fillText","$set","guessCorrect","some","restart","getRandomWord","mounted","document","getElementById","offsetWidth","offsetHeight","getContext","lineWidth","components_HangmanGamevue_type_script_lang_js_","HangmanGame_component","HangmanGame","CrosswordGamevue_type_template_id_3cd8b9a8_render","ref","class","smallContainer","index1","item","index2","directives","rawName","form","expression","crossword-board__item--valid","equalsLetters","char","index","minlength","maxlength","pattern","required","domProps","input","target","composing","across","clue","down","CrosswordGamevue_type_template_id_3cd8b9a8_staticRenderFns","CrosswordCell","CrosswordCellNode","is_start_of_word","WordElement","Crossword","words_in","clues_in","bad_words","GRID_ROWS","GRID_COLS","char_index","getSquareGrid","max_tries","best_grid","best_ratio","a_grid","getGrid","ratio","tries","clear","start_dir","randomDirection","grid","word_element","word_elements","canPlaceWordAt","placeWordAt","groups","word_has_been_added_to_grid","g","best_position","findPositionForWord","dir","minimizeGrid","getBadWords","getLegend","position","cell","increment_position","k","r_min","r_max","c_min","c_max","rows","cols","new_grid","_r","_r2","r2","_c2","c2","addCellToGrid","index_of_word_in_input_list","index_of_char","direction","charAt","col","_i","_i2","canPlaceCharAt","intersections","_i3","is_empty","is_intersection","can_place_here","_r3","_c3","_i4","_is_empty","_is_intersection","_can_place_here","_c4","_i5","_c5","_r4","_i6","_is_empty2","_is_intersection2","_can_place_here2","_c6","_r5","_i7","_is_empty3","_is_intersection3","_can_place_here3","_r6","_i8","_result","bests","possible_locations_on_grid","point","intersections_across","intersections_down","best","_i9","sort","a","b","CrosswordGamevue_type_script_lang_js_","wordsWithReflexions","description","selectedWords","acrossWords","downWords","matrix","wordWithReflexion","clues","acrossWord","downWord","concat","toLowerCase","letter1","letter2","setRandomWords","eightWords","generateGrid","MATRIX_LENGTH","cw","toConsumableArray","fill","forEach","legend","getWindowWidth","$refs","parentElement","clientWidth","$nextTick","addEventListener","beforeDestroy","removeEventListener","components_CrosswordGamevue_type_script_lang_js_","CrosswordGame_component","CrosswordGame","Appvue_type_script_lang_js_","src_Appvue_type_script_lang_js_","App_component","App","Vue","use","BootstrapVue","config","productionTip","render","h","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_HangmanGame_vue_vue_type_style_index_0_id_b9783970_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_HangmanGame_vue_vue_type_style_index_0_id_b9783970_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CrosswordGame_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_CrosswordGame_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.23b08cb9.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/vue-games/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LetterButton.vue?vue&type=style&index=0&id=5520117e&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LetterButton.vue?vue&type=style&index=0&id=5520117e&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('b-container',[_c('h2',[_vm._v(\"Vue Games\")]),_c('p',{staticClass:\"text-left m-4\"},[_vm._v(\"Different word games mades as separated components to be reused.\\nThis npm package allows you to include this components in your vue application.\")]),_c('b-card',{attrs:{\"no-body\":\"\"}},[_c('b-tabs',{attrs:{\"card\":\"\"}},[_c('b-tab',{attrs:{\"title\":\"Hangman\",\"active\":\"\"}},[_c('hangman-game')],1),_c('b-tab',{attrs:{\"title\":\"Crossword\"}},[_c('crossword-game')],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"hangman\"}},[_c('b-row',{attrs:{\"align-h\":\"center\"}},[(_vm.showPlayAgain)?_c('b-button',{staticClass:\"m-3\",attrs:{\"size\":\"sm\"},on:{\"click\":_vm.playAgain}},[_vm._v(\"\\n      Play Again\\n    \")]):_vm._e()],1),_vm._m(0),_c('div',{attrs:{\"id\":\"word\"}},_vm._l((_vm.wordDivs),function(letter,key){return _c('div',{key:key,staticClass:\"word-blankletter\"},[_vm._v(\"\\n        \"+_vm._s(letter)+\"\\n      \")])}),0),_c('div',{attrs:{\"id\":\"keyboard\"}},_vm._l((_vm.letters),function(row,key){return _c('div',{key:key,staticClass:\"keyboard-row\"},_vm._l((row),function(letter){return _c('letter-button',{key:letter,attrs:{\"letter\":letter,\"game-over\":_vm.gameOver,\"two-players\":_vm.twoPlayers},on:{\"check\":function($event){return _vm.check(letter)}}})}),1)}),0)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"board\"}},[_c('canvas',{attrs:{\"id\":\"board-canvas\"}})])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',{staticClass:\"keyboard-row-letter\",attrs:{\"id\":_vm.letter,\"disabled\":_vm.disabled},on:{\"click\":function($event){return _vm.clicked()}}},[_vm._v(\"\\n  \"+_vm._s(_vm.letter)+\"\\n\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <button\n    class='keyboard-row-letter'\n    :id='letter'\n    :disabled='disabled'\n    @click='clicked()'\n  >\n    {{ letter }}\n  </button>\n</template>\n<script>\n  export default {\n    props: [\"letter\", \"gameOver\", \"twoPlayers\"],\n    data: function() {\n      return {\n        disabled: false\n      }\n    },\n    // disable button on click, and send 'check' event to run check() in main vue instance\n    methods: {\n      clicked: function() {\n        this.disabled = true\n        this.$emit(\"check\")\n      }\n    },\n    watch: {\n      // disable all buttons on game over; re-enable all buttons on restart\n      gameOver: function (newValue) {\n        this.disabled = newValue\n      }\n    }\n  }\n</script>\n<style scoped>\nbutton {\n  background-color: white;\n  border: none;\n  color: #333;\n  box-shadow: 0 2px 5px #D0D0D0;\n  font-family: 'Roboto', sans-serif;\n  margin: 2px;\n}\n\nbutton:disabled {\n  color: #CCC;\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LetterButton.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LetterButton.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LetterButton.vue?vue&type=template&id=5520117e&scoped=true&\"\nimport script from \"./LetterButton.vue?vue&type=script&lang=js&\"\nexport * from \"./LetterButton.vue?vue&type=script&lang=js&\"\nimport style0 from \"./LetterButton.vue?vue&type=style&index=0&id=5520117e&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5520117e\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"hangman\">\n    <b-row align-h=\"center\">\n      <b-button\n        v-if=\"showPlayAgain\"\n        size=\"sm\"\n        class=\"m-3\"\n        @click=\"playAgain\"\n      >\n        Play Again\n      </b-button>\n    </b-row>\n    \n    <!-- canvas where hangman is drawn -->\n    <div id=\"board\">\n      <canvas id=\"board-canvas\"></canvas>\n    </div>\n\n    <!-- row of blank letters for the selected word -->\n    <div id=\"word\">\n      <div\n        class=\"word-blankletter\"\n        v-for=\"(letter, key) in wordDivs\"\n        :key=\"key\"\n        v-cloak>\n          {{ letter }}\n        </div>\n    </div>\n\n    <!-- keyboard -->\n    <div id=\"keyboard\">\n      <div\n        v-for=\"(row, key) in letters\"\n        :key=\"key\"\n        class=\"keyboard-row\"\n      >\n        <letter-button\n          v-for=\"letter in row\"\n          :letter=\"letter\"\n          :game-over=\"gameOver\"\n          :two-players=\"twoPlayers\"\n          :key=\"letter\"\n          @check=\"check(letter)\"\n          v-cloak />\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\n  import LetterButton from './LetterButton.vue'\n\n  export default {\n    components: {\n      LetterButton\n    },\n\n    props: {\n      words: {\n        type: Array,\n        default: () => ['Pear', 'Apple', 'Tomatoe', 'Blackberry', 'Strawberry']\n      },\n      showPlayAgain: {\n        type: Boolean,\n        default: true\n      },\n      lang: {\n        type: String,\n        default: 'EN',\n        validator: function (value) {\n          // The value must match one of these strings\n          return ['EN', 'ES'].indexOf(value) !== -1\n        }\n      }\n    },\n\n    computed: {\n      wordsUpperCased: function () {\n        return this.words.map(word => word.toUpperCase())\n      },\n      winMessage: function () {\n        let winMessage\n        switch (this.lang) {\n          case 'ES':\n            winMessage = 'Ganaste!'\n            break\n          // case 'FR':\n          //   winMessage = 'Horizontal'\n          //   break\n          default:\n            winMessage = 'You win!'\n            break\n        }\n        return winMessage\n      },\n      loseMessage: function () {\n        let loseMessage\n        switch (this.lang) {\n          case 'ES':\n            loseMessage = 'Perdiste!'\n            break\n          // case 'FR':\n          //   loseMessage = 'Horizontal'\n          //   break\n          default:\n            loseMessage = 'You lost!'\n            break\n        }\n        return loseMessage\n      }\n    },\n\n    filters: {\n      capitalize: function (value) {\n        return value.toUpperCase()\n      }\n    },\n\n    data () {\n      return {\n        // keyboard letters\n        letters: [\n          [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"],\n          [\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"],\n          [\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"]\n        ],\n        // currentWord will be set to a random word from above list\n        currentWord: \"\",\n        // each element in this array is a letter in the word\n        wordDivs: [],\n        // to count the number of wrong guesses\n        guesses: 0,\n        gameOver: false,\n        lose: false,\n        twoPlayers: false,\n        // will be set to the canvas element in mounted()\n        canvas: \"\",\n        // will be set to the canvas 2d context\n        ctx: \"\"\n      }\n    },\n\n    methods: {\n\n      randomInteger: function(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n      },\n\n      // draws the gallows\n      drawGallows: function(ctx) {\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n        ctx.fillStyle = \"#FF9800\"\n        ctx.strokeStyle = \"#FF9800\"\n        ctx.beginPath()\n        // left side\n        ctx.moveTo(this.canvas.width / 10, this.canvas.height / 10)\n        ctx.lineTo(this.canvas.width / 10, this.canvas.height * 0.95)\n        // bottom side\n        ctx.lineTo(this.canvas.width * 0.8, this.canvas.height * 0.95)\n        // top side\n        ctx.moveTo(this.canvas.width / 10, this.canvas.height / 10)\n        ctx.lineTo(this.canvas.width * 0.4, this.canvas.height / 10)\n        // hanging notch\n        ctx.lineTo(this.canvas.width * 0.4, this.canvas.height / 5)\n        ctx.stroke()\n        ctx.closePath()\n      },\n\n      // fill this.wordDivs with empty strings to create the orange blanks\n      makeBlanks: function() {\n        for (var i = 0; i < this.currentWord.length; i++) {\n          this.wordDivs.push(\"\")\n        }\n      },\n\n      // draws the appropriate part of the hanging man and/or 'game over'\n      updateCanvas: function(ctx) {\n        // this.drawGallows(ctx);\n        // draw the head\n        if (this.guesses === 0) {\n          ctx.beginPath()\n          ctx.arc(this.canvas.width * 0.4, (this.canvas.height / 5) + 20, 20, 0, 2 * Math.PI)\n          ctx.stroke()\n          ctx.closePath()\n        } \n        // draw the torso\n        else if (this.guesses === 1) {\n          ctx.beginPath()\n          ctx.moveTo(this.canvas.width * 0.4, (this.canvas.height / 5) + 40)\n          ctx.lineTo(this.canvas.width * 0.4, this.canvas.height / 2)\n          ctx.stroke()\n          ctx.closePath()\n        }\n        // draw the right leg\n        else if (this.guesses === 2) {\n          ctx.beginPath()\n          ctx.moveTo(this.canvas.width * 0.4, this.canvas.height / 2)\n          ctx.lineTo((this.canvas.width * 0.4) + 30, this.canvas.height * 0.7)\n          ctx.stroke()\n          ctx.closePath()\n        }\n        // draw the left leg\n        else if (this.guesses === 3) {\n          ctx.beginPath()\n          ctx.moveTo(this.canvas.width * 0.4, this.canvas.height / 2)\n          ctx.lineTo((this.canvas.width * 0.4) - 30, this.canvas.height * 0.7)\n          ctx.stroke()\n          ctx.closePath()\n        }\n        // draw the right arm\n        else if (this.guesses === 4) {\n          ctx.beginPath()\n          ctx.moveTo(this.canvas.width * 0.4, (this.canvas.height / 5) + 55)\n          ctx.lineTo((this.canvas.width * 0.4) + 35, (this.canvas.height / 2) + 10)\n          ctx.stroke()\n          ctx.closePath()\n        } \n        // draw the left arm and handle game over\n        else if (this.guesses === 5) {\n          ctx.beginPath()\n          ctx.moveTo(this.canvas.width * 0.4, (this.canvas.height / 5) + 55)\n          ctx.lineTo((this.canvas.width * 0.4) - 35, (this.canvas.height / 2) + 10)\n          ctx.stroke()\n          ctx.closePath()\n\n          // game over\n          ctx.font = \"24px Roboto, sans-serif\"\n          ctx.fillText(this.loseMessage, this.canvas.width * 0.4 - 30, this.canvas.height * 0.9)\n          this.gameOver = true\n          this.lose = true\n          this.$emit('gameFinished', this.currentWord, this.lose)\n\n          // fill in the word with the correct answer\n          for (var i = 0; i < this.currentWord.length; i++) {\n            this.$set(this.wordDivs, i, this.currentWord[i]);\n          }\n        }\n        this.guesses++\n      },\n\n      // check the chosen letter when a letter component emits 'check'\n      check: function(letter) {\n        if (!this.gameOver) {\n          var guessCorrect = false\n          // check if the letter is in the word, if so, fill it in\n          for (var i = 0; i < this.currentWord.length; i++) {\n            if (letter == this.currentWord[i]) {\n              this.$set(this.wordDivs, i, letter)\n              guessCorrect = true\n            }\n          }\n          // if there are no more blanks in the word, you win\n          if (!this.wordDivs.some(function(value) {return value == \"\"})) {\n            this.gameOver = true\n            this.ctx.font = \"24px Roboto, sans-serif\"\n            this.ctx.fillText(this.winMessage, this.canvas.width * 0.4 - 30, this.canvas.height * 0.9)\n            this.$emit('gameFinished', this.currentWord, this.lose)\n          }\n          // if they guess wrong, draw the man\n          if (!guessCorrect) {\n            this.updateCanvas(this.ctx)\n          }\n        }\n      },\n\n      // re-initializes the game\n      restart: function() {\n        this.gameOver = false\n        this.lose = false\n        this.guesses = 0\n        this.wordDivs.splice(0)\n        this.drawGallows(this.ctx)\n        this.makeBlanks()\n      },\n\n      // chooses a new word and resets the game when 'play again' is clicked\n      playAgain: function() {\n        this.currentWord = this.getRandomWord()\n        this.restart()\n      },\n\n      getRandomWord: function () {\n        return this.wordsUpperCased[this.randomInteger(0, this.wordsUpperCased.length - 1)]\n      }\n    },\n\n    // identify the canvas element and initialize it, draw the gallows, choose a word, and draw the blanks.\n    mounted: function() {\n      this.canvas = document.getElementById(\"board-canvas\")\n      this.canvas.width = document.getElementById(\"board\").offsetWidth\n      this.canvas.height = document.getElementById(\"board\").offsetHeight\n      this.ctx = this.canvas.getContext(\"2d\")\n      this.ctx.lineWidth = 2\n      this.drawGallows(this.ctx)\n      this.currentWord = this.getRandomWord()\n      this.makeBlanks()\n    }\n    \n  }\n</script>\n\n<style scoped>\n/* \n\nHANGMAN\nhttps://github.com/joebeachjoebeach/hangman\nTable of Contents\n\nI. global element selectors\nII. helper classes applied by js\nIII. the app\n\tA. title bar / header\n\tB. canvas\n\tC. blank letters\n\tD. keyboard\n\tE. game-option buttons\n\n*/\n/* I. global element selectors */\nhtml, body {\n  align-items: center;\n  background-color: #F5F5F6;\n  color: #333;\n  display: flex;\n  flex-direction: column;\n  font-family: 'Roboto', sans-serif;\n  height: 100%;\n  width: 100%;\n}\n\n/* II. helper classes applied by js */\n.hidden {\n  display: none;\n}\n\n.orange {\n  background-color: #ff9800;\n}\n\n/* III. the app and its contents */\n#hangman {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  margin: 0;\n  width: 100%;\n}\n\n/* B. canvas container */\n#board {\n  background-color: white;\n  box-shadow: 0 2px 5px #D0D0D0;\n  flex: 2 1 auto;\n  margin: 10px 0 0 0;\n  max-width: 500px;\n  width: 95%;\n  min-height: 400px;\n}\n\n/* C. blank letters */\n#word {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 20px 0 18px 0;\n}\n\n.word-blankletter {\n  align-items: flex-end;\n  background-color: #ff9800;\n  box-shadow: 0 2px 5px #D0D0D0;\n  display: flex;\n  height: 30px;\n  justify-content: center;\n  margin: 0 2px 2px 2px;\n  width: 20px;\n}\n\n/* D. keyboard */\n#keyboard {\n  align-items: center;\n  display: flex;\n  flex: 2 1 auto;\n  flex-direction: column;\n}\n\n.keyboard-row {\n  display: flex;\n}\n\n.keyboard-row-letter {\n  height: 40px;\n  width: 28px;\n}\n\n/* E. game-option buttons */\n#buttons {\n  display: flex;\n  justify-content: space-between;\n  margin: 0 0 5px 0;\n  max-width: 700px;\n  width: 95%;\n}\n\n.buttons-button {\n  height: 25px;\n  font-size: 1em;\n  margin: auto;\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HangmanGame.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HangmanGame.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HangmanGame.vue?vue&type=template&id=b9783970&scoped=true&\"\nimport script from \"./HangmanGame.vue?vue&type=script&lang=js&\"\nexport * from \"./HangmanGame.vue?vue&type=script&lang=js&\"\nimport style0 from \"./HangmanGame.vue?vue&type=style&index=0&id=b9783970&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b9783970\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"crossword-container\",staticClass:\"crossword-container\"},[(_vm.showPlayAgain)?_c('b-row',{attrs:{\"align-h\":\"center\"}},[_c('b-button',{staticClass:\"m-3\",attrs:{\"size\":\"sm\"},on:{\"click\":_vm.playAgain}},[_vm._v(\"\\n      Play Again\\n    \")])],1):_vm._e(),(_vm.grid)?_c('div',{staticClass:\"crossword-board-container\"},[_c('b-row',[_c('b-col',{class:[ _vm.smallContainer ? 'col-12' : 'col-7' ]},[_c('div',{staticClass:\"crossword-board\"},[_vm._l((_vm.grid),function(row,index1){return [_vm._l((row),function(item,index2){return [(item)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.form[index1][index2]),expression:\"form[index1][index2]\"}],key:(\"row-\" + index1 + \"-\" + index2),staticClass:\"crossword-board__item\",class:{'crossword-board__item--valid': _vm.equalsLetters(_vm.form[index1][index2], item.char)},attrs:{\"id\":_vm.index(index1, index2),\"type\":\"text\",\"minlength\":\"1\",\"maxlength\":\"1\",\"pattern\":_vm.pattern(item.char),\"required\":\"required\"},domProps:{\"value\":(_vm.form[index1][index2])},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.form[index1], index2, $event.target.value)}}}):_c('span',{key:(\"row-\" + index1 + \"-\" + index2),staticClass:\"crossword-board__item--blank\",attrs:{\"id\":_vm.index(index1, index2)}})]})]})],2)]),_c('b-col',{class:[ _vm.smallContainer ? ['col-12', 'px-5', 'my-5'] : 'col-4' ]},[_c('div',{staticClass:\"crossword-clues\"},[(_vm.across.length > 0)?_c('dl',{staticClass:\"crossword-clues__list crossword-clues__list--across\"},[_c('dt',{staticClass:\"crossword-clues__list-title\"},[_vm._v(_vm._s(this.across))]),_vm._l((_vm.acrossWords),function(word,index){return _c('dd',{key:(\"across-\" + (word.word) + \"-\" + index),staticClass:\"crossword-clues__list-item\"},[_c('span',{staticClass:\"hightlighted\"},[_vm._v(_vm._s(index+1)+\". \"+_vm._s(word.clue)+\" (\"+_vm._s(word.word)+\")\")])])})],2):_vm._e(),(_vm.down.length > 0)?_c('dl',{staticClass:\"crossword-clues__list crossword-clues__list--down\"},[_c('dt',{staticClass:\"crossword-clues__list-title\"},[_vm._v(_vm._s(this.down))]),_vm._l((_vm.downWords),function(word,index){return _c('dd',{key:(\"down-\" + (word.word) + \"-\" + index),staticClass:\"crossword-clues__list-item\"},[_c('span',{staticClass:\"hightlighted\"},[_vm._v(_vm._s(index+1)+\". \"+_vm._s(word.clue)+\" (\"+_vm._s(word.word)+\")\")])])})],2):_vm._e()])])],1)],1):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <!-- I've used this template as guide:\n  https://codepen.io/adrianroworth/pen/OpeyZq\n  54 3544 570127 -->\n  <div class=\"crossword-container\" ref=\"crossword-container\">\n    <b-row v-if=\"showPlayAgain\" align-h=\"center\">\n      <b-button\n        size=\"sm\"\n        class=\"m-3\"\n        @click=\"playAgain\"\n      >\n        Play Again\n      </b-button>\n    </b-row>\n    <div\n      v-if=\"grid\"\n      class=\"crossword-board-container\"\n    >\n      <b-row>\n        <b-col :class=\"[ smallContainer ? 'col-12' : 'col-7' ]\">\n          <div class=\"crossword-board\">\n            <template\n              v-for=\"(row, index1) in grid\"\n            >\n              <!-- ROW -->\n              <template\n                v-for=\"(item, index2) in row\"\n              >\n                <input\n                  v-if=\"item\"\n                  :key=\"`row-${index1}-${index2}`\"\n                  :id=\"index(index1, index2)\"\n                  class=\"crossword-board__item\"\n                  :class=\"{'crossword-board__item--valid': equalsLetters(form[index1][index2], item.char)}\"\n                  type=\"text\"\n                  minlength=\"1\"\n                  maxlength=\"1\"\n                  :pattern=\"pattern(item.char)\"\n                  required=\"required\"\n                  v-model=\"form[index1][index2]\"\n                />\n                <span\n                  v-else\n                  :key=\"`row-${index1}-${index2}`\"\n                  :id=\"index(index1, index2)\"\n                  class=\"crossword-board__item--blank\"\n                />\n              </template>\n              <!-- /ROW -->\n            </template>\n          </div>\n        </b-col>\n        <b-col :class=\"[ smallContainer ? ['col-12', 'px-5', 'my-5'] : 'col-4' ]\">\n          <div class=\"crossword-clues\">\n            <dl\n              v-if=\"across.length > 0\"\n              class=\"crossword-clues__list crossword-clues__list--across\"\n            >\n              <dt class=\"crossword-clues__list-title\">{{ this.across }}</dt>\n              <dd\n                class=\"crossword-clues__list-item\"\n                v-for=\"(word, index) in acrossWords\"\n                :key=\"`across-${word.word}-${index}`\"\n              >\n                <span class=\"hightlighted\">{{index+1}}. {{word.clue}} ({{word.word}})</span>\n              </dd>\n            </dl>\n            <dl\n              v-if=\"down.length > 0\"\n              class=\"crossword-clues__list crossword-clues__list--down\"\n            >\n              <dt class=\"crossword-clues__list-title\">{{ this.down }}</dt>\n              <dd\n                class=\"crossword-clues__list-item\"\n                v-for=\"(word, index) in downWords\"\n                :key=\"`down-${word.word}-${index}`\"\n              >\n                <span class=\"hightlighted\">{{index+1}}. {{word.clue}} ({{word.word}})</span>\n              </dd>\n            </dl>\n          </div>\n        </b-col>\n      </b-row>\n    </div>\n  </div>\n</template>\n\n<script>\n// Each cell on the crossword grid is null or one of these\nfunction CrosswordCell (letter) {\n  this.char = letter // the actual letter for the cell on the crossword\n  // If a word hits this cell going in the \"across\" direction, this will be a CrosswordCellNode\n  this.across = null \n  // If a word hits this cell going in the \"down\" direction, this will be a CrosswordCellNode\n  this.down = null\n}\n\n// You can tell if the Node is the start of a word (which is needed if you want to number the cells)\n// and what word and clue it corresponds to (using the index)\nfunction CrosswordCellNode (is_start_of_word, index) {\n  this.is_start_of_word = is_start_of_word\n  this.index = index // use to map this node to its word or clue\n}\n\nfunction WordElement (word, index) {\n  this.word = word // the actual word\n  this.index = index // use to map this node to its word or clue\n}\n\nfunction Crossword (words_in, clues_in) {\n  var GRID_ROWS = 50\n  var GRID_COLS = 50\n  // This is an index of the positions of the char in the crossword (so we know where we can potentially place words)\n  // example {\"a\" : [{'row' : 10, 'col' : 5}, {'row' : 62, 'col' :17}], {'row' : 54, 'col' : 12}], \"b\" : [{'row' : 3, 'col' : 13}]} \n  // where the two item arrays are the row and column of where the letter occurs\n  var char_index = {}\t\n\n  // these words are the words that can't be placed on the crossword\n  var bad_words\n\n  // returns the crossword grid that has the ratio closest to 1 or null if it can't build one\n  this.getSquareGrid = function (max_tries) {\n    var best_grid = null\n    var best_ratio = 0\n    for (var i = 0; i < max_tries; i++) {\n      var a_grid = this.getGrid(1)\n      if(a_grid == null) continue\n      var ratio = Math.min(a_grid.length, a_grid[0].length) * 1.0 / Math.max(a_grid.length, a_grid[0].length)\n      if (ratio > best_ratio) {\n        best_grid = a_grid\n        best_ratio = ratio\n      }\n\n      if (best_ratio == 1) break\n    }\n    return best_grid\n  }\n\n  // returns an abitrary grid, or null if it can't build one\n  this.getGrid = function(max_tries){\n    for (var tries = 0; tries < max_tries; tries++) {\n      clear(); // always start with a fresh grid and char_index\n      // place the first word in the middle of the grid\n      var start_dir = randomDirection()\n      var r = Math.floor(grid.length / 2)\n      var c = Math.floor(grid[0].length / 2)\n      var word_element = word_elements[0]\n      if (start_dir == \"across\") {\n        c -= Math.floor(word_element.word.length/2)\n      } else {\n        r -= Math.floor(word_element.word.length/2)\n      }\n\n      if (canPlaceWordAt(word_element.word, r, c, start_dir) !== false) {\n        placeWordAt(word_element.word, word_element.index, r, c, start_dir)\n      } else {\n        bad_words = [word_element]\n        return null\n      }\n\n      // start with a group containing all the words (except the first)\n      // as we go, we try to place each word in the group onto the grid\n      // if the word can't go on the grid, we add that word to the next group \n      var groups = []\n      let word_has_been_added_to_grid\n      groups.push(word_elements.slice(1))\n      for (var g = 0; g < groups.length; g++) {\n        word_has_been_added_to_grid = false\n        // try to add all the words in this group to the grid\n        for (var i = 0; i < groups[g].length; i++) {\n          word_element = groups[g][i]\n          var best_position = findPositionForWord(word_element.word)\n          if (!best_position) { \n            // make the new group (if needed)\n            if (groups.length - 1 == g) groups.push([])\n            // place the word in the next group\n            groups[g+1].push(word_element)\n          } else {\n            r = best_position[\"row\"], c = best_position[\"col\"]\n            var dir = best_position['direction']\n            placeWordAt(word_element.word, word_element.index, r, c, dir)\n            word_has_been_added_to_grid = true\n          }\n        }\n        // if we haven't made any progress, there is no point in going on to the next group\n        if(!word_has_been_added_to_grid) break\n      }\n      // no need to try again\n      if (word_has_been_added_to_grid) return minimizeGrid()\n    }\n\n      bad_words = groups[groups.length - 1]\n      return null\n  }\n\n  // returns the list of WordElements that can't fit on the crossword\n  this.getBadWords = function(){\n    return bad_words;\n  }\n\n  // get two arrays (\"across\" and \"down\") that contain objects describing the\n  // topological position of the word (e.g. 1 is the first word starting from\n  // the top left, going to the bottom right), the index of the word (in the\n  // original input list), the clue, and the word itself\n  this.getLegend = function(grid){\n    var groups = {\"across\" : [], \"down\" : []};\n    var position = 1;\n    for (var r = 0; r < grid.length; r++) {\n      for (var c = 0; c < grid[r].length; c++) {\n        var cell = grid[r][c];\n        var increment_position = false\n        // check across and down\n        for (var k in groups) {\n          // does a word start here? (make sure the cell isn't null, first)\n          if (cell && cell[k] && cell[k]['is_start_of_word']) {\n            var index = cell[k]['index']\n            groups[k].push({\"position\" : position, \"index\" : index, \"clue\" : clues_in[index], \"word\" : words_in[index]})\n            increment_position = true\n          }\n        }\n\n        if (increment_position) position++\n      }\n    }\n    return groups;\n  }\n\n  // move the grid onto the smallest grid that will fit it\n  var minimizeGrid = function(){\n    // find bounds\n    var r_min = GRID_ROWS-1, r_max = 0, c_min = GRID_COLS-1, c_max = 0\n    for (var r = 0; r < GRID_ROWS; r++) {\n      for (var c = 0; c < GRID_COLS; c++) {\n        var cell = grid[r][c]\n        if (cell != null) {\n          if (r < r_min) r_min = r\n          if (r > r_max) r_max = r\n          if (c < c_min) c_min = c\n          if (c > c_max) c_max = c\n      }\n      }\n    }\n    // initialize new grid\n    var rows = r_max - r_min + 1\n    var cols = c_max - c_min + 1\n    var new_grid = new Array(rows)\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < cols; c++) {\n        new_grid[r] = new Array(cols)\n      }\n    }\n\n    // copy the grid onto the smaller grid\n    for (let r = r_min, r2 = 0; r2 < rows; r++, r2++) {\n      for (let c = c_min, c2 = 0; c2 < cols; c++, c2++) {\n         new_grid[r2][c2] = grid[r][c]\n      }\n    }\n\n    return new_grid\n  }\n\n  // helper for placeWordAt();\n  var addCellToGrid = function (word, index_of_word_in_input_list, index_of_char, r, c, direction) {\n    var char = word.charAt(index_of_char)\n    if (grid[r][c] == null) {\n        grid[r][c] = new CrosswordCell(char)\n\n        // init the char_index for that character if needed\n        if (!char_index[char]) char_index[char] = []\n\n        // add to index\n        char_index[char].push({\"row\" : r, \"col\" : c})\n    }\n\n    var is_start_of_word = index_of_char == 0\n    grid[r][c][direction] = new CrosswordCellNode(is_start_of_word, index_of_word_in_input_list)\n\n  }\n\n  // place the word at the row and col indicated (the first char goes there)\n  // the next chars go to the right (across) or below (down), depending on the direction\n  var placeWordAt = function (word, index_of_word_in_input_list, row, col, direction) {\n    if (direction == \"across\") {\n      for (let c = col, i = 0; c < col + word.length; c++, i++) {\n        addCellToGrid(word, index_of_word_in_input_list, i, row, c, direction)\n      }\n    } else if (direction == \"down\") {\n      for (let r = row, i = 0; r < row + word.length; r++, i++) {\n        addCellToGrid(word, index_of_word_in_input_list, i, r, col, direction)\n      }\n    } else {\n      throw \"Invalid Direction\"\n    }\n  }\n\n  // you can only place a char where the space is blank, or when the same\n  // character exists there already\n  // returns false, if you can't place the char\n  // 0 if you can place the char, but there is no intersection\n  // 1 if you can place the char, and there is an intersection\n  var canPlaceCharAt = function(char, row, col){\n    // no intersection\n    if (grid[row][col] == null) return 0\n    // intersection!\n    if (grid[row][col]['char'] == char) return 1\n\n    return false\n  }\n\n  // determines if you can place a word at the row, column in the direction\n  var canPlaceWordAt = function (word, row, col, direction) {\n    // out of bounds\n    if (row < 0 || row >= grid.length || col < 0 || col >= grid[row].length) return false\n    \n    var intersections\n    \n    if (direction == \"across\") {\n      // out of bounds (word too long)\n      if (col + word.length > grid[row].length) return false\n      // can't have a word directly to the left\n      if (col - 1 >= 0 && grid[row][col - 1] != null) return false\n      // can't have word directly to the right\n      if (col + word.length < grid[row].length && grid[row][col+word.length] != null) return false\n\n      // check the row above to make sure there isn't another word\n      // running parallel. It is ok if there is a character above, only if\n      // the character below it intersects with the current word\n      for (let r = row - 1, c = col, i = 0; r >= 0 && c < col + word.length; c++, i++) {\n        let is_empty = grid[r][c] == null\n        let is_intersection = grid[row][c] != null && grid[row][c]['char'] == word.charAt(i)\n        let can_place_here = is_empty || is_intersection\n        if(!can_place_here) return false\n      }\n\n      // same deal as above, we just search in the row below the word\n      for (let r = row + 1, c = col, i = 0; r < grid.length && c < col + word.length; c++, i++) {\n        let is_empty = grid[r][c] == null\n        let is_intersection = grid[row][c] != null && grid[row][c]['char'] == word.charAt(i)\n        let can_place_here = is_empty || is_intersection\n        if (!can_place_here) return false\n      }\n\n      // check to make sure we aren't overlapping a char (that doesn't match)\n      // and get the count of intersections\n      intersections = 0\n      for (let c = col, i = 0; c < col + word.length; c++, i++) {\n        let result = canPlaceCharAt(word.charAt(i), row, c)\n        if(result === false) return false\n        intersections += result\n      }\n    } else if (direction == \"down\") {\n      // out of bounds\n      if (row + word.length > grid.length) return false\n      // can't have a word directly above\n      if (row - 1 >= 0 && grid[row - 1][col] != null) return false\n      // can't have a word directly below\n      if (row + word.length < grid.length && grid[row+word.length][col] != null) return false\n\n      // check the column to the left to make sure there isn't another\n      // word running parallel. It is ok if there is a character to the\n      // left, only if the character to the right intersects with the\n      // current word\n      for (let c = col - 1, r = row, i = 0; c >= 0 && r < row + word.length; r++, i++) {\n        let is_empty = grid[r][c] == null\n        let is_intersection = grid[r][col] != null && grid[r][col]['char'] == word.charAt(i)\n        let can_place_here = is_empty || is_intersection\n        if (!can_place_here) return false\n      }\n\n      // same deal, but look at the column to the right\n      for (let c = col + 1, r = row, i = 0; r < row + word.length && c < grid[r].length; r++, i++) {\n        let is_empty = grid[r][c] == null\n        let is_intersection = grid[r][col] != null && grid[r][col]['char'] == word.charAt(i)\n        let can_place_here = is_empty || is_intersection\n        if (!can_place_here) return false\n      }\n\n      // check to make sure we aren't overlapping a char (that doesn't match)\n      // and get the count of intersections\n      intersections = 0\n      for (let r = row, i = 0; r < row + word.length; r++, i++) {\n        let result = canPlaceCharAt(word.charAt(i, 1), r, col)\n        if(result === false) return false\n        intersections += result\n      }\n    } else {\n        throw \"Invalid Direction\"\n    }\n    return intersections\n  }\n\n  var randomDirection = function() {\n    return Math.floor(Math.random()*2) ? \"across\" : \"down\"\n  }\n\n  var findPositionForWord = function (word) {\n    // check the char_index for every letter, and see if we can put it there in a direction\n    var bests = []\n    for (var i = 0; i < word.length; i++) {\n      var possible_locations_on_grid = char_index[word.charAt(i)]\n      if(!possible_locations_on_grid) continue\n      for (var j = 0; j < possible_locations_on_grid.length; j++) {\n        var point = possible_locations_on_grid[j]\n        var r = point['row']\n        var c = point['col']\n        // the c - i, and r - i here compensate for the offset of character in the word\n        var intersections_across = canPlaceWordAt(word, r, c - i, \"across\")\n        var intersections_down = canPlaceWordAt(word, r - i, c, \"down\")\n\n        if (intersections_across !== false)\n          bests.push({\"intersections\" : intersections_across, \"row\" : r, \"col\" : c - i, \"direction\" : \"across\"})\n        if (intersections_down !== false)\n          bests.push({\"intersections\" : intersections_down, \"row\" : r - i, \"col\" : c, \"direction\" : \"down\"})\n      }\n    }\n\n    if(bests.length == 0) return false;\n\n    // find a good random position\n    var best = bests[Math.floor(Math.random()*bests.length)]\n\n    return best\n  }\n\n  var clear = function () {\n    for (var r = 0; r < grid.length; r++) {\n      for (var c = 0; c < grid[r].length; c++) {\n        grid[r][c] = null\n      }\n    }\n    char_index = {}\n  }\n\n  // constructor\n  if (words_in.length < 2) throw \"A crossword must have at least 2 words\";\n  if (words_in.length != clues_in.length) throw \"The number of words must equal the number of clues\";\t\n\n  // build the grid;\n  var grid = new Array(GRID_ROWS)\n  for (var i = 0; i < GRID_ROWS; i++) {\n    grid[i] = new Array(GRID_COLS)\n  }\n\n  // build the element list (need to keep track of indexes in the originial input arrays)\n  var word_elements = []\n  for (let i = 0; i < words_in.length; i++) {\n    word_elements.push(new WordElement(words_in[i], i))\n  }\n\n  // I got this sorting idea from http://stackoverflow.com/questions/943113/algorithm-to-generate-a-crossword/1021800#1021800\n  // seems to work well\n  word_elements.sort(function(a, b){ return b.word.length - a.word.length; })\n}\n\nvar CrosswordUtils = {\n  PATH_TO_PNGS_OF_NUMBERS : \"numbers/\",\n\n  toHtml : function(grid, show_answers){\n    if (grid == null) return\n    var html = []\n    html.push(\"<table class='crossword'>\")\n    var label = 1\n    for (var r = 0; r < grid.length; r++) {\n      html.push(\"<tr>\");\n      for (var c = 0; c < grid[r].length; c++) {\n        var cell = grid[r][c]\n        var is_start_of_word = false\n        var css_class, char\n        if (cell == null) {\n          char = \"&nbsp;\"\n          css_class = \"no-border\"\n        } else {\n          char = cell['char']\n          css_class = \"\"\n          is_start_of_word = (cell['across'] && cell['across']['is_start_of_word']) || (cell['down'] && cell['down']['is_start_of_word'])\n        }\n\n        if (is_start_of_word) {\n          var img_url = CrosswordUtils.PATH_TO_PNGS_OF_NUMBERS + label + \".png\"\n          html.push(\"<td class='\" + css_class + \"' title='\" + r + \", \" + c + \"' style=\\\"background-image:url('\" + img_url + \"')\\\">\")\n          label++\n        } else {\n          html.push(\"<td class='\" + css_class + \"' title='\" + r + \", \" + c + \"'>\")\n        }\n\n        if (show_answers) {\n          html.push(char)\n        } else {\n          html.push(\"&nbsp;\")\n        }\n      }\n      html.push(\"</tr>\")\n    }\n    html.push(\"</table>\")\n    return html.join(\"\\n\")\n  }\n}\n\nexport default {\n  props: {\n    wordsWithReflexions: {\n      type: Array,\n      default: () => [\n        {\n          'word': 'Coffee',\n          'description': 'Many people drink it in the morning with milk or cream.'\n        },\n        {\n          'word': 'Tea',\n          'description': \"British people drink it at 5 o' clock.\"\n        },\n        {\n          'word': 'Peach',\n          'description': 'Juicy, round fruit with a stone-like seed.'\n        },\n        {\n          'word': 'Grape',\n          'description': 'You make wine from this fruit.'\n        },\n        {\n          'word': 'Primero',\n          'description': 'Que ocupa el lugar número uno en una serie ordenada. Dicho de una persona o de una cosa: Que precede a las demás de su especie en orden, tiempo, lugar, situación, clase o jerarquía.'\n        },\n        {\n          'word': 'Lemon',\n          'description': 'You make lemonade from this fruit.'\n        },\n        {\n          'word': 'Cake',\n          'description': 'You serve it at birthday parties.'\n        },\n        {\n          'word': 'Fish',\n          'description': 'You can find them in an aquarium.'\n        },\n        {\n          'word': 'Egg',\n          'description': 'Hens lay it.'\n        },\n        {\n          'word': 'Pork',\n          'description': 'Meat from a pig.'\n        },\n        {\n          'word': 'Apple',\n          'description': 'Eve gave one to Adam.'\n        },\n        {\n          'word': 'Chicken',\n          'description': 'An animal which lays eggs'\n        },\n        {\n          'word': 'Goat',\n          'description': 'Used for milk and cheese'\n        },\n        {\n          'word': 'Horse',\n          'description': 'Found in races'\n        },\n        {\n          'word': 'Kitten',\n          'description': 'A baby cat'\n        },\n        {\n          'word': 'Snake',\n          'description': 'An animal with no feet'\n        },\n        {\n          'word': 'Cat',\n          'description': 'A popular house pet'\n        },\n        {\n          'word': 'Cow',\n          'description': 'Relative of a bull'\n        }\n      ]\n    },\n    lang: {\n      type: String,\n      default: 'EN',\n      validator: function (value) {\n        // The value must match one of these strings\n        return ['EN', 'ES'].indexOf(value) !== -1\n      }\n    },\n    showPlayAgain: {\n      type: Boolean,\n      default: true\n    }\n  },\n\n  data () {\n    return {\n      selectedWords: [],\n      acrossWords: [],\n      downWords: [],\n      matrix: null,\n      grid: null,\n      form: null,\n      smallContainer: false\n    }\n  },\n\n  computed: {\n    words: function () {\n      return this.selectedWords.map(wordWithReflexion => wordWithReflexion.word)\n    },\n\n    clues: function () {\n      return this.selectedWords.map(wordWithReflexion => wordWithReflexion.description)\n    },\n\n    across: function () {\n      let acrossWord\n      switch (this.lang) {\n        case 'ES':\n          acrossWord = 'Horizontales'\n          break\n        // case 'FR':\n        //   acrossWord = 'Horizontal'\n        //   break\n        default:\n          acrossWord = 'Across'\n          break\n      }\n      return acrossWord\n    },\n\n    down: function () {\n      let downWord\n      switch (this.lang) {\n        case 'ES':\n          downWord = 'Verticales'\n          break\n        // case 'FR':\n        //   across = 'Vertical'\n        //   break\n        default:\n          downWord = 'Down'\n          break\n      }\n      return downWord\n    }\n  },\n\n  methods: {\n    index: function (index1, index2) {\n      let id = `item${index1+1}-${index2+1}`\n      return id\n    },\n\n    pattern: function (value) {\n      // pattern=\"^[sS]{1}$\"\n      let pattern = `^[${value.toLowerCase()}${value.toUpperCase()}]{1}$`\n      return pattern\n    },\n\n    equalsLetters: function (letter1, letter2) {\n      return (letter1.toUpperCase() === letter2.toUpperCase()) || (letter1.toLowerCase() === letter2.toLowerCase())\n    },\n\n    setRandomWords: function () {\n      let eightWords = []\n      while (eightWords.length < 8) {\n        let word = this.wordsWithReflexions[Math.floor(Math.random()*this.wordsWithReflexions.length)]\n        if (eightWords.indexOf(word) < 0) {\n          eightWords.push(word)\n        }\n      }\n      this.selectedWords = eightWords\n    },\n\n    generateGrid: function () {\n      const MATRIX_LENGTH = 13\n\n      let grid\n\n      while ((!grid) || (grid.length>MATRIX_LENGTH)) {\n        // // Create crossword object with the words and clues\n        this.setRandomWords()\n        var cw = new Crossword(this.words, this.clues)\n        // create the crossword grid (try to make it have a 1:1 width to height ratio in 10 tries)\n        var tries = 10\n        grid = cw.getSquareGrid(tries)\n      }\n\n      this.grid = grid\n\n      this.form = [ ...Array(MATRIX_LENGTH) ].map(() => Array(MATRIX_LENGTH).fill(''))\n      \n      // fill grid in\n      if (this.grid.length < MATRIX_LENGTH) {\n        // add rows\n        while (this.grid.length < MATRIX_LENGTH) {\n          this.grid.push([])\n        }\n        // add columns\n        this.grid.forEach(row => {\n          while (row.length < MATRIX_LENGTH) {\n            row.push(null)\n          }\n        })\n\n        let legend = cw.getLegend(this.grid)\n        this.acrossWords = legend.across\n        this.downWords = legend.down\n      }\n    },\n\n    playAgain: function () {\n      this.generateGrid()\n    },\n\n    getWindowWidth: function () {\n      if (this.$refs['crossword-container'].parentElement.parentElement.clientWidth < 1200) {\n        this.smallContainer = true\n      }\n    }\n  },\n\n  mounted () {\n    this.generateGrid()\n    this.$nextTick(function() {\n      window.addEventListener('resize', this.getWindowWidth)\n      this.getWindowWidth()\n    })\n  },\n\n  beforeDestroy () {\n    window.removeEventListener('resize', this.getWindowWidth)\n  }\n}\n</script>\n\n<style>\n.crossword-board__item--valid {\n  background: #9aff67;\n}\n\n.hightlighted {\n  background: rgba(255, 255, 255, 0.95);\n  padding: 3px 5px;\n  margin: -3px -5px;\n  line-height: 1.7;\n  display: inline;\n}\n\n.crossword-board-container {\n  position: relative;\n  /* background: #fff; */\n}\n\n.crossword-board {\n  position: relative;\n  z-index: 1;\n  background: transparent;\n  border: 1px solid #000;\n  width: 650px;\n  height: 650px;\n  display: grid;\n  grid-template: repeat(13, 7.69231%) / repeat(13, 7.69231%);\n  list-style-type: none;\n  padding: 0;\n  margin: 0 auto;\n}\n\n.crossword-board__item {\n  border: 1px solid #000;\n  position: relative;\n  z-index: 100;\n  text-align: center;\n  font-size: 20px;\n  font-weight: bold;\n  text-transform: uppercase;\n}\n\n.crossword-board__item:not(.crossword-board__item--valid) {\n  background-color: #fff;\n}\n\n.crossword-board__item:active:not(.crossword-board__item--valid), .crossword-board__item:focus:not(.crossword-board__item--valid) {\n  background: #ffff74;\n  border: 1px solid #000;\n  outline: 1px solid #000;\n}\n\n.crossword-board__item--blank {\n  background-color: #75489794;\n  border: 1px solid #000;\n  outline: 1px solid #000;\n}\n\n.crossword-clues {\n  /* position: absolute;\n  margin-top: 650px; */\n  color: #000;\n  /* top: 0;\n  left: 650px;\n  width: 650px; */\n}\n\n.crossword-clues__list {\n  margin: 0 0 0 60px;\n  padding: 0;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.crossword-clues__list-title {\n  font-weight: bold;\n  padding: 4px;\n}\n\n.crossword-clues__list-item {\n  margin: 0;\n  padding: 4px;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CrosswordGame.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CrosswordGame.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CrosswordGame.vue?vue&type=template&id=3cd8b9a8&\"\nimport script from \"./CrosswordGame.vue?vue&type=script&lang=js&\"\nexport * from \"./CrosswordGame.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CrosswordGame.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <b-container>\n      <h2>Vue Games</h2>\n      <p class=\"text-left m-4\">Different word games mades as separated components to be reused.\n  This npm package allows you to include this components in your vue application.</p>\n      <b-card no-body>\n        <b-tabs card>\n          <b-tab title=\"Hangman\" active>\n            <hangman-game />\n          </b-tab>\n          <b-tab title=\"Crossword\">\n            <crossword-game />\n          </b-tab>\n        </b-tabs>\n      </b-card>\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport HangmanGame from '@/components/HangmanGame.vue'\nimport CrosswordGame from '@/components/CrosswordGame.vue'\n\nexport default {\n  name: 'app',\n  components: {\n    HangmanGame,\n    CrosswordGame\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=9421f4ba&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\nimport BootstrapVue from 'bootstrap-vue'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\n\nVue.use(BootstrapVue)\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HangmanGame.vue?vue&type=style&index=0&id=b9783970&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HangmanGame.vue?vue&type=style&index=0&id=b9783970&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CrosswordGame.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CrosswordGame.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}